:root {
  --number-background-given: var(--purple-050);
  --number-border-given: var(--purple-700);
  --number-foreground-given: var(--purple-700);
  --number-background-computed: var(--pink-050);
  --number-border-computed: var(--pink-700);
  --number-foreground-computed: var(--pink-700);
  --number-background-target: var(--yellow-050);
  --number-border-target: var(--yellow-700);
  --number-foreground-target: var(--yellow-700);
  --number-background: var(--number-background-given);
  --number-border: var(--number-border-given);
  --number-foreground: var(--number-foreground-given);
}

.number {
  overflow: hidden;
  text-overflow: ellipsis;

  &:empty {
    &::before {
      content: "?";
    }
  }

  .number:not(:empty) ~ .number:not(:empty) ~ &.number--nan {
    background: no-repeat center center/4rem 4rem
      url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='-32 -32 64 64'%3E%3Cg stroke='%230e7490' stroke-width='8' fill='none' transform='rotate(-45)'%3E%3Ccircle r='16' /%3E%3Cline x1='-16' x2='16'/%3E%3C/g%3E%3C/svg%3E");
    transition: none;

    &::before {
      content: "";
    }
  }

  &:not(:empty) {
    border: var(--border-width) solid var(--number-border);
    background-color: var(--number-background);
    color: var(--number-foreground);
  }

  @each $color in ("given", "computed", "target") {
    &[data-color="#{$color}"] {
      --number-background: var(--number-background-#{$color});
      --number-border: var(--number-border-#{$color});
      --number-foreground: var(--number-foreground-#{$color});
    }
  }

  @for $d from 1 through 5 {
    &[data-digits="#{$d}"] {
      font-size: var(--digit-size-#{$d});
    }
  }
}
